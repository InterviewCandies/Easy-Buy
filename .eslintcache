[{"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\App.js":"1","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Footer\\Footer.js":"2","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Layout\\Layout.js":"3","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Sidebar\\Sidebar.js":"4","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\containers\\SearchBar\\SearchBar.js":"5","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\WishedList\\WishedList.js":"6","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\Cart\\Cart.js":"7","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\Login\\Login.js":"8","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\NotFound\\NotFound.js":"9","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Logo\\Logo.js":"10","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Button\\Button.js":"11","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\common\\index.js":"12","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\Register\\Register.js":"13","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\index.js":"14","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\Home\\Home.js":"15","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Card\\Card.js":"16","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\ProductDetails\\ProductDetails.js":"17","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\containers\\Pagination\\Pagination.js":"18","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\Category\\Category.js":"19","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Loader\\Loader.js":"20","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\utils\\hashHelper.js":"21","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\reportWebVitals.js":"22","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\utils\\checkStorageHelper.js":"23","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\service\\firebase.js":"24","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\service\\authentication.js":"25","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\CustomTooltip\\CustomTooltip.js":"26","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\utils\\IdGenerator.js":"27","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\ErrorPage\\ErrorPage.js":"28"},{"size":2199,"mtime":1612694963149,"results":"29","hashOfConfig":"30"},{"size":480,"mtime":1612622201730,"results":"31","hashOfConfig":"30"},{"size":1271,"mtime":1612695137487,"results":"32","hashOfConfig":"30"},{"size":4579,"mtime":1612691736115,"results":"33","hashOfConfig":"30"},{"size":1647,"mtime":1612581830911,"results":"34","hashOfConfig":"30"},{"size":6985,"mtime":1612691124037,"results":"35","hashOfConfig":"30"},{"size":7544,"mtime":1612691659908,"results":"36","hashOfConfig":"30"},{"size":8056,"mtime":1612694629579,"results":"37","hashOfConfig":"30"},{"size":982,"mtime":1612690321439,"results":"38","hashOfConfig":"30"},{"size":356,"mtime":1610716419795,"results":"39","hashOfConfig":"30"},{"size":735,"mtime":1612619994308,"results":"40","hashOfConfig":"30"},{"size":432,"mtime":1612691606074,"results":"41","hashOfConfig":"30"},{"size":7384,"mtime":1612693628679,"results":"42","hashOfConfig":"30"},{"size":500,"mtime":1609484099694,"results":"43","hashOfConfig":"30"},{"size":2484,"mtime":1612628210594,"results":"44","hashOfConfig":"30"},{"size":3819,"mtime":1612689153354,"results":"45","hashOfConfig":"30"},{"size":6034,"mtime":1612629189679,"results":"46","hashOfConfig":"30"},{"size":2140,"mtime":1612591567234,"results":"47","hashOfConfig":"30"},{"size":2958,"mtime":1612628215178,"results":"48","hashOfConfig":"30"},{"size":445,"mtime":1612687855037,"results":"49","hashOfConfig":"30"},{"size":282,"mtime":1612411202242,"results":"50","hashOfConfig":"30"},{"size":362,"mtime":1609484099694,"results":"51","hashOfConfig":"30"},{"size":942,"mtime":1612583926627,"results":"52","hashOfConfig":"30"},{"size":458,"mtime":1612670475715,"results":"53","hashOfConfig":"30"},{"size":376,"mtime":1612671809622,"results":"54","hashOfConfig":"30"},{"size":433,"mtime":1612689729614,"results":"55","hashOfConfig":"30"},{"size":337,"mtime":1612409424710,"results":"56","hashOfConfig":"30"},{"size":997,"mtime":1612694949856,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lj9svh",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"83"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\App.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Footer\\Footer.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Layout\\Layout.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Sidebar\\Sidebar.js",["125"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport CustomTooltip from \"../CustomTooltip/CustomTooltip\";\r\nimport HomeIcon from \"../../asset/img/home.svg\";\r\nimport HangerIcon from \"../../asset/img/tshirt.svg\";\r\nimport ShoeIcon from \"../../asset/img/shoe.svg\";\r\nimport ToyIcon from \"../../asset/img/toy.svg\";\r\nimport PhoneIcon from \"../../asset/img/cellphone.svg\";\r\nimport HeartIcon from \"../../asset/img/empty-heart.svg\";\r\nimport UserIcon from \"../../asset/img/user.svg\";\r\nimport SportIcon from \"../../asset/img/sport.svg\";\r\nimport GithubIcon from \"../../asset/img/github.svg\";\r\nimport CartIcon from \"../../asset/img/cart.svg\";\r\nimport { PRIMARY_COLOR, DEFAULT_COLOR, AUTHEN_TOKEN } from \"../../common\";\r\nconst Icon = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\nconst Nav = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  background-color: white;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-item: space-around;\r\n  position: fixed;\r\n`;\r\nconst NavItem = styled.li`\r\n  padding: 20px;\r\n  margin: 0;\r\n  ${(props) =>\r\n    props.active &&\r\n    ` ${Icon} {\r\n      -webkit-filter: invert(100%) !important;\r\n    }\r\n    background-color: ${PRIMARY_COLOR}; \r\n        pointer-events: none;\r\n    `}\r\n  &:hover {\r\n    background-color: ${DEFAULT_COLOR};\r\n  }\r\n`;\r\nfunction Sidebar() {\r\n  const history = useHistory();\r\n  const currentPath = history.location.pathname.toLowerCase();\r\n  return (\r\n    <div>\r\n      <Nav>\r\n        <CustomTooltip title=\"Home\" placement=\"right\" arrow>\r\n          <Link to=\"/all\">\r\n            <NavItem active={currentPath.includes(\"/all\")} arrow>\r\n              <Icon src={HomeIcon} alt=\"home\"></Icon>\r\n            </NavItem>\r\n          </Link>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Clothings\" placement=\"right\" arrow>\r\n          <Link to=\"/category/clothings\">\r\n            <NavItem active={currentPath.includes(\"/clothings\")}>\r\n              <Icon src={HangerIcon} alt=\"hanger\"></Icon>\r\n            </NavItem>\r\n          </Link>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Shoes\" placement=\"right\" arrow>\r\n          <Link to=\"/category/shoes\">\r\n            <NavItem active={currentPath.includes(\"/shoes\")}>\r\n              <Icon src={ShoeIcon} alt=\"shoe\"></Icon>\r\n            </NavItem>\r\n          </Link>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Toy\" placement=\"right\" arrow>\r\n          <Link to=\"/category/toy\">\r\n            <NavItem active={currentPath.includes(\"/toy\")}>\r\n              <Icon src={ToyIcon} alt=\"toy\"></Icon>\r\n            </NavItem>\r\n          </Link>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Electronics\" placement=\"right\" arrow>\r\n          <Link to=\"/category/electronics\">\r\n            <NavItem active={currentPath.includes(\"/electronics\")}>\r\n              <Icon src={PhoneIcon} alt=\"phone\"></Icon>\r\n            </NavItem>\r\n          </Link>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Sports\" placement=\"right\" arrow>\r\n          <Link to=\"/category/sports\">\r\n            <NavItem active={currentPath.includes(\"/sports\")}>\r\n              <Icon src={SportIcon} alt=\"sport\"></Icon>\r\n            </NavItem>\r\n          </Link>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Wishlist\" placement=\"right\" arrow>\r\n          <Link to=\"/wishlist\">\r\n            <NavItem active={currentPath.includes(\"/wishlist\")}>\r\n              <Icon src={HeartIcon} alt=\"wishlist\"></Icon>\r\n            </NavItem>\r\n          </Link>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Shopping cart\" placement=\"right\" arrow>\r\n          <Link to=\"/cart\">\r\n            <NavItem active={currentPath.includes(\"/cart\")}>\r\n              <Icon src={CartIcon} alt=\"cart\"></Icon>\r\n            </NavItem>\r\n          </Link>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Sign out\" placement=\"right\" arrow>\r\n          <Link\r\n            to=\"/\"\r\n            onClick={() => {\r\n              localStorage.removeItem(AUTHEN_TOKEN);\r\n            }}\r\n          >\r\n            <NavItem>\r\n              <Icon src={UserIcon} alt=\"user\"></Icon>\r\n            </NavItem>\r\n          </Link>\r\n        </CustomTooltip>\r\n        <CustomTooltip title=\"Github\" placement=\"right\">\r\n          <a href=\"https://github.com/InterviewCandies\" target=\"_blank\">\r\n            <NavItem>\r\n              <Icon src={GithubIcon} alt=\"github\"></Icon>\r\n            </NavItem>\r\n          </a>\r\n        </CustomTooltip>\r\n      </Nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n",["126","127"],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\containers\\SearchBar\\SearchBar.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\WishedList\\WishedList.js",["128"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport Pagination from \"../../containers/Pagination/Pagination\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport SearchBar from \"../../containers/SearchBar/SearchBar\";\r\nimport HeartIcon from \"../../asset/img/heart.svg\";\r\nimport Wishlist from \"../../asset/img/wishlist.svg\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  addToCart,\r\n  addToWishlist,\r\n  isInCart,\r\n} from \"../../utils/checkStorageHelper\";\r\nimport { DEFAULT_COLOR, WISHLIST } from \"../../common\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n  padding-bottom: 30px;\r\n  position: relative;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  position: relative;\r\n  background-color: #fff;\r\n  border-radius: 16px;\r\n  grid-template-columns: 200px 1fr;\r\n  margin: 10px 30px;\r\n  padding: 10px;\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  &:hover {\r\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\r\n  }\r\n`;\r\nconst CardImage = styled.img`\r\n  width: 200px;\r\n  object-fit: contain;\r\n`;\r\nconst CardTitle = styled.h3`\r\n  font-size: 18px;\r\n  line-height: 16px;\r\n  letter-spacing: 2px;\r\n  text-transform: lowercase;\r\n  margin: 0;\r\n  &:first-letter {\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\nconst CardSubtitle = styled.p`\r\n  font-size: 12px;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 500px;\r\n  color: #6e798c;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  height: 30px;\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 2;\r\n`;\r\nconst CardContent = styled.div`\r\n  text-align: left;\r\n  padding: 8px 15px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-item: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CartButton = styled.button`\r\n  background-color: #0f56b3;\r\n  padding: 0;\r\n  width: 100%;\r\n  color: white;\r\n  height: 40px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 10px;\r\n  font-weight: 600;\r\n  &:hover {\r\n    background-color: #cecece !important;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 15px;\r\n`;\r\n\r\nconst CardBrand = styled.h4`\r\n  text-transform: uppercase;\r\n  color: #6e798c;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 5px;\r\n  font-family: \"Open Sans\", sans-serif;\r\n`;\r\n\r\nfunction CardItem({ product, update }) {\r\n  const history = useHistory();\r\n  const [, forcUpdate] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  return (\r\n    <Container onClick={() => history.push(\"/product/\" + product.id)}>\r\n      <Tooltip title=\"Remove from your wishlist\" placement=\"right\" arrow>\r\n        <Icon\r\n          src={HeartIcon}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            addToWishlist(product);\r\n            update();\r\n          }}\r\n        ></Icon>\r\n      </Tooltip>\r\n      <CardImage src={product.image}></CardImage>\r\n      <CardContent>\r\n        <CardBrand>{product.company}</CardBrand>\r\n        <CardTitle>{product.name}</CardTitle>\r\n        <CardSubtitle>{product.description}</CardSubtitle>\r\n        <h2 style={{ margin: \"10px 0\" }}>{product.price}</h2>\r\n        <Tooltip\r\n          title={isInCart(product.id) ? \"\" : \"Add to your cart\"}\r\n          placement=\"right\"\r\n          arrow\r\n        >\r\n          <CartButton\r\n            disabled={isInCart(product.id)}\r\n            style={\r\n              isInCart(product.id) ? { backgroundColor: DEFAULT_COLOR } : null\r\n            }\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              forcUpdate((it) => !it);\r\n              addToCart(product);\r\n              enqueueSnackbar(\"Added to your cart\", { variant: \"success\" });\r\n            }}\r\n          >\r\n            Buy\r\n          </CartButton>\r\n        </Tooltip>\r\n      </CardContent>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst MAXIMUM_ITEM_PER_PAGE = 10;\r\n\r\nfunction WishedList() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [queryKey, setQueryKey] = useState(\"\");\r\n  const history = useHistory();\r\n  const [, forceUpdate] = useState(false);\r\n  const products = JSON.parse(localStorage.getItem(WISHLIST));\r\n\r\n  const filteredProducts = products?.filter((product) =>\r\n    product.name.toLocaleLowerCase().includes(queryKey.toLocaleLowerCase())\r\n  );\r\n  const currentProducts = filteredProducts?.slice(\r\n    (currentPage - 1) * MAXIMUM_ITEM_PER_PAGE,\r\n    Math.min(currentPage * MAXIMUM_ITEM_PER_PAGE, filteredProducts?.length)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        {filteredProducts && filteredProducts.length ? (\r\n          <>\r\n            <SearchBar\r\n              value={queryKey}\r\n              onChange={(text) => setQueryKey(text)}\r\n            ></SearchBar>\r\n            {filteredProducts?.length ? (\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  padding: \"20px 30px 5px 30px\",\r\n                }}\r\n              >\r\n                <Pagination\r\n                  itemsPerPage={MAXIMUM_ITEM_PER_PAGE}\r\n                  datasetSize={filteredProducts.length}\r\n                  currentPage={currentPage}\r\n                  onChange={(e) => setCurrentPage(e)}\r\n                ></Pagination>\r\n              </div>\r\n            ) : null}\r\n            <Grid>\r\n              {currentProducts?.map((product) => (\r\n                <CardItem\r\n                  key={product.id}\r\n                  product={product}\r\n                  update={() => forceUpdate((it) => !it)}\r\n                ></CardItem>\r\n              ))}\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <img\r\n              src={Wishlist}\r\n              style={{\r\n                maxWidth: \"200px\",\r\n                objectFit: \"contain\",\r\n                margin: \"20px 0\",\r\n              }}\r\n            ></img>\r\n            <CardTitle\r\n              style={{\r\n                textTransform: \"uppercase\",\r\n                fontSize: \"1.5rem\",\r\n                lineHeight: \"1.5\",\r\n              }}\r\n            >\r\n              Your wishlist is currently empty\r\n            </CardTitle>\r\n            <CardSubtitle style={{ fontSize: \"0.8rem\" }}>\r\n              Begin to add your favorite items into wishlist and buy them later\r\n            </CardSubtitle>\r\n            <Button width=\"250px\" handleClick={() => history.push(\"/all\")}>\r\n              Continue shopping\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WishedList;\r\n",["129","130"],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\Cart\\Cart.js",["131","132","133"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport Logo from \"../../components/Logo/Logo\";\r\nimport EmptyCart from \"../../asset/img/empty-cart.svg\";\r\nimport {\r\n  AUTHEN_TOKEN,\r\n  CART,\r\n  PRIMARY_COLOR,\r\n  SECONDARY_COLOR,\r\n} from \"../../common\";\r\nimport {\r\n  Dialog,\r\n  Tooltip,\r\n  DialogContent,\r\n  Slide,\r\n  DialogActions,\r\n  DialogTitle,\r\n  ButtonBase,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 30px;\r\n  padding: 0px 40px;\r\n  position: relative;\r\n  grid-template-columns: 1fr 2fr;\r\n  margin-bottom: 30px;\r\n  @media (max-width: 1000px) {\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 0;\r\n    padding: 10px;\r\n  }\r\n`;\r\nconst CardItem = styled.div`\r\n  background-color: #fff;\r\n  border-radius: 16px;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 150px 1fr;\r\n  padding: 10px;\r\n  height: 250px;\r\n  align-items: center;\r\n  outline: none;\r\n`;\r\nconst CardImage = styled.img`\r\n  width: 150px;\r\n  object-fit: contain;\r\n`;\r\nconst CardTitle = styled.h3`\r\n  font-size: 18px;\r\n  line-height: 16px;\r\n  letter-spacing: 2px;\r\n  margin: 5px;\r\n  margin-bottom: 10px;\r\n  text-transform: lowercase;\r\n  &:first-letter {\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\nconst CardSubtitle = styled.p`\r\n  font-size: 12px;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 500px;\r\n  color: #6e798c;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  height: 30px;\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 2;\r\n  margin: 0;\r\n`;\r\nconst CardContent = styled.div`\r\n  text-align: left;\r\n  padding: 8px 15px;\r\n`;\r\nconst Recipe = styled.div`\r\n  width: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  height: min-content;\r\n  background-color: #fff;\r\n  border-radius: 16px;\r\n  margin: 20px 10px;\r\n`;\r\nconst Container = styled.div`\r\n  position: relative;\r\n  margin-top: 3rem;\r\n  @media (max-width: 750px) {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 10px;\r\n  background-color: ${(props) => props.color || \"#0F56B3\"};\r\n  width: ${(props) => props.width || \"100%\"};\r\n  max-width: 200px;\r\n  color: white;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 10px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  &:hover {\r\n    background-color: #cecece;\r\n  }\r\n`;\r\n\r\nconst DialogButton = styled.button`\r\n  padding: 10px 10px;\r\n  text-transform: uppercase;\r\n  background-color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.color || \"#000\"};\r\n  &:hover {\r\n    background-color: ${(props) => props.color || \"#cecece\"};\r\n    color: #fff;\r\n  }\r\n`;\r\nfunction Cart() {\r\n  let products = JSON.parse(localStorage.getItem(CART) || \"[]\");\r\n  const [, forceUpdate] = useState(false);\r\n  const history = useHistory();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleRemoveProduct = (id) => {\r\n    products = products.filter((product) => product.id !== id);\r\n    forceUpdate((it) => !it);\r\n    localStorage.setItem(CART, JSON.stringify(products));\r\n  };\r\n\r\n  const handleOrder = () => {\r\n    localStorage.removeItem(CART);\r\n    enqueueSnackbar(\"Order has been processed. Thank you!\", {\r\n      variant: \"info\",\r\n    });\r\n    forceUpdate((it) => !it);\r\n    setOpen(false);\r\n  };\r\n\r\n  let totalPrice = 0;\r\n  products.forEach((product) => {\r\n    totalPrice += Number(\r\n      product.price.substring(1, product.price.length).split(\",\").join(\"\")\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      {products.length ? (\r\n        <Container>\r\n          <Grid>\r\n            <Recipe>\r\n              <p style={{ marginBottom: \"10px\" }}>Online Shopping Website</p>\r\n              <Logo size=\"1.5rem\"></Logo>\r\n              <CardSubtitle style={{ marginTop: \"10px\", height: \"auto\" }}>\r\n                {\"Date: \" + new Date().toDateString()}\r\n              </CardSubtitle>\r\n              <CardSubtitle style={{ marginTop: \"5px\", height: \"auto\" }}>\r\n                Bill to {localStorage.getItem(AUTHEN_TOKEN)}\r\n              </CardSubtitle>\r\n              <CardTitle style={{ marginTop: \"10px\" }}>\r\n                Total: ${totalPrice.toFixed(2)}\r\n              </CardTitle>\r\n              <Button onClick={() => setOpen(true)}>Order</Button>\r\n            </Recipe>\r\n            <Carousel>\r\n              {products.map((product) => (\r\n                <CardItem key={product.id}>\r\n                  <CardImage src={product.image}></CardImage>\r\n                  <CardContent>\r\n                    <CardTitle>{product.name}</CardTitle>\r\n                    <CardSubtitle>{product.description}</CardSubtitle>\r\n                    <h2>{product.price}</h2>\r\n                    <Tooltip\r\n                      arrow\r\n                      title=\"Remove this item from my cart\"\r\n                      placement=\"right\"\r\n                    >\r\n                      <Button\r\n                        color={SECONDARY_COLOR}\r\n                        onClick={() => handleRemoveProduct(product.id)}\r\n                      >\r\n                        Remove\r\n                      </Button>\r\n                    </Tooltip>\r\n                  </CardContent>\r\n                </CardItem>\r\n              ))}\r\n            </Carousel>\r\n          </Grid>\r\n          <Dialog\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n          >\r\n            <DialogTitle style={{ textAlign: \"center\" }}>\r\n              <Logo size=\"1.5rem\"></Logo>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <Typography variant=\"caption\" style={{ fontSize: \"1rem\" }}>\r\n                Thank you for choosing us! Please click \"OK\" to confirm the\r\n                order.\r\n              </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <DialogButton color={PRIMARY_COLOR} onClick={handleOrder}>\r\n                OK\r\n              </DialogButton>\r\n              <DialogButton onClick={() => setOpen(false)}>Cancel</DialogButton>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Container>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <img\r\n            src={EmptyCart}\r\n            style={{\r\n              maxWidth: \"200px\",\r\n              objectFit: \"contain\",\r\n              margin: \"20px 0\",\r\n            }}\r\n          ></img>\r\n          <CardTitle\r\n            style={{\r\n              textTransform: \"uppercase\",\r\n              fontSize: \"1.5rem\",\r\n              lineHeight: \"1.5\",\r\n            }}\r\n          >\r\n            Your cart is currently empty\r\n          </CardTitle>\r\n          <CardSubtitle style={{ fontSize: \"0.8rem\" }}>\r\n            Look like you dont have any item in your shopping cart\r\n          </CardSubtitle>\r\n          <Button width=\"250px\" onClick={() => history.push(\"/all\")}>\r\n            Continue shopping\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\Login\\Login.js",["134"],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\NotFound\\NotFound.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Logo\\Logo.js",[],["135","136"],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Button\\Button.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\common\\index.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\Register\\Register.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\index.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\Home\\Home.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Card\\Card.js",["137"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport CartIcon from \"../../asset/img/cart.svg\";\r\nimport HeartIcon from \"../../asset/img/heart.svg\";\r\nimport HeartPlainIcon from \"../../asset/img/empty-heart.svg\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\nimport {\r\n  isInCart,\r\n  isInWishList,\r\n  addToCart,\r\n  addToWishlist,\r\n} from \"../../utils/checkStorageHelper\";\r\nimport { useSnackbar } from \"notistack\";\r\nconst Container = styled.div`\r\n  background-color: white;\r\n  width: 100%;\r\n  border-radius: 16px;\r\n  position: relative;\r\n  padding: 8px;\r\n  &:hover {\r\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\r\n  }\r\n`;\r\nconst CardImage = styled.img`\r\n  object-fit: contain;\r\n  height: 140px;\r\n`;\r\nconst CardTitle = styled.h3`\r\n  font-size: 18px;\r\n  line-height: 16px;\r\n  letter-spacing: 2px;\r\n  text-transform: lowercase;\r\n  &:first-letter {\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\nconst CardSubtitle = styled.p`\r\n  font-size: 12px;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 500px;\r\n  color: #6e798c;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  height: 30px;\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 2;\r\n`;\r\nconst CardContent = styled.div`\r\n  text-align: left;\r\n`;\r\nconst CardActions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 80px;\r\n  align-items: center;\r\n`;\r\nconst Icon = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 15px;\r\n`;\r\n\r\nconst CartButton = styled.button`\r\n  background-color: #0f56b3;\r\n  padding: 0;\r\n  width: 100%;\r\n  color: white;\r\n  height: 40px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 10px;\r\n  font-weight: 600;\r\n  &:hover {\r\n    background-color: #cecece;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nfunction Card({ product }) {\r\n  const [favourite, setFavourite] = useState(isInWishList(product.id));\r\n  const [, forceUpdate] = useState(false);\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  return (\r\n    <Container onClick={() => history.push(\"/product/\" + product.id)}>\r\n      <Tooltip\r\n        title={favourite ? \"Remove from wishlist\" : \"Add to your wishlist\"}\r\n        placement=\"right\"\r\n        arrow\r\n      >\r\n        <Icon\r\n          src={favourite ? HeartIcon : HeartPlainIcon}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            addToWishlist(product);\r\n            enqueueSnackbar(\r\n              favourite\r\n                ? \"Removed from your wishlist!\"\r\n                : \"Added to your wishlist!\",\r\n              {\r\n                variant: \"success\",\r\n              }\r\n            );\r\n            setFavourite((prevState) => !prevState);\r\n          }}\r\n        ></Icon>\r\n      </Tooltip>\r\n      <CardImage src={product.image}></CardImage>\r\n      <CardContent>\r\n        <CardTitle>{product.name}</CardTitle>\r\n        <div>\r\n          <CardSubtitle>{product.description}</CardSubtitle>\r\n        </div>\r\n        <CardActions>\r\n          <h3>{product.price}</h3>\r\n          <Tooltip\r\n            title={isInCart(product.id) ? \"\" : \"Add to my cart\"}\r\n            placement=\"right\"\r\n            arrow\r\n          >\r\n            <CartButton\r\n              style={isInCart(product.id) ? { backgroundColor: \"#cecece\" } : {}}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                addToCart(product);\r\n                enqueueSnackbar(\"Added to your cart!\", { variant: \"success\" });\r\n                forceUpdate((it) => !it);\r\n              }}\r\n              disabled={isInCart(product.id)}\r\n            >\r\n              Buy\r\n            </CartButton>\r\n          </Tooltip>\r\n        </CardActions>\r\n      </CardContent>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\ProductDetails\\ProductDetails.js",["138","139"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport { DATASET_URL, SECONDARY_COLOR } from \"../../common\";\r\nimport StarICon from \"../../asset/img/star.svg\";\r\nimport EmptyStarIcon from \"../../asset/img/empty-star.svg\";\r\nimport {\r\n  addToCart,\r\n  addToWishlist,\r\n  isInCart,\r\n  isInWishList,\r\n} from \"../../utils/checkStorageHelper\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  grid-gap: 25px;\r\n  padding: 20px;\r\n  padding-top: 0px;\r\n  margin-bottom: 30px;\r\n`;\r\nconst MainCard = styled.div`\r\n  background-color: #fff;\r\n  border-radius: 16px;\r\n  display: grid;\r\n  grid-template-columns: auto 1fr;\r\n  margin: 30px 70px;\r\n  position: relative;\r\n  padding: 20px;\r\n  @media (max-width: 1200px) {\r\n    margin: 30px 30px;\r\n  }\r\n  @media (max-width: 660px) {\r\n    grid-template-columns: none;\r\n  }\r\n`;\r\nconst CardImage = styled.img`\r\n  object-fit: contain;\r\n  max-width: 300px;\r\n  @media (max-width: 1200px) {\r\n    width: 300px;\r\n  }\r\n`;\r\nconst CardContent = styled.div`\r\n  text-align: left;\r\n  max-width: 600px;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CardCategory = styled.h4`\r\n  text-transform: uppercase;\r\n  color: #6e798c;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 5px;\r\n  font-family: \"Open Sans\", sans-serif;\r\n`;\r\nconst CardTitle = styled.h3`\r\n  font-size: 24px;\r\n  text-align: left;\r\n  line-height: 16px;\r\n  margin-top: 0;\r\n  text-transform: lowercase;\r\n  &:first-letter {\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\nconst CardPrice = styled.h2`\r\n  font-size: 1.6rem;\r\n`;\r\nconst CardSubtitle = styled.p`\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 600px;\r\n  color: #6e798c;\r\n`;\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  grid-gap: 10px;\r\n  bottom: 10px;\r\n  width: 100%;\r\n`;\r\nconst SizeButton = styled.button`\r\n  border: solid 1px #d7d8d9;\r\n  color: #007ae9;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  background-color: #fff;\r\n  outline: none;\r\n  margin-right: 7px;\r\n  text-transform: uppercase;\r\n  &:hover {\r\n    background-color: #007ae9;\r\n    color: #fff;\r\n  }\r\n`;\r\nconst Icon = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-right: 3px;\r\n`;\r\nconst MAXIMUM_RATING = 5;\r\nconst displayStar = (stars) => {\r\n  let arr = [];\r\n  for (let i = 0; i < Number(stars); i++)\r\n    arr.push(<Icon key={i} src={StarICon}></Icon>);\r\n  for (let i = stars; i < MAXIMUM_RATING; i++)\r\n    arr.push(<Icon key={i} src={EmptyStarIcon}></Icon>);\r\n  return arr;\r\n};\r\nconst displaySize = (sizes) => {\r\n  return sizes.map((size) => <SizeButton key={size}>{size}</SizeButton>);\r\n};\r\nfunction ProductDetails() {\r\n  const [products, setProducts] = useState(null);\r\n  const [, forceUpdate] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  useEffect(() => {\r\n    fetch(DATASET_URL)\r\n      .then((response) => response.json())\r\n      .then((data) => setProducts(data));\r\n  }, []);\r\n  const url = window.location.pathname;\r\n  const id = url.substring(url.lastIndexOf(\"/\") + 1);\r\n  const product = products?.find((product) => product.id == id);\r\n  const filteredProducts = products?.filter(\r\n    (p) => p.category === product.category && p.id != product.id\r\n  );\r\n  const shuffled = filteredProducts?.sort(() => 0.5 - Math.random());\r\n  const relatedProducts = shuffled?.slice(0, 5);\r\n  return (\r\n    <Layout>\r\n      {products ? (\r\n        <>\r\n          <MainCard>\r\n            <CardImage src={product.image}></CardImage>\r\n            <CardContent>\r\n              <CardCategory>{product.company}</CardCategory>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <CardTitle>{product.name}</CardTitle>\r\n                  {displayStar(product?.stars)}\r\n                </div>\r\n                <CardPrice>{product.price}</CardPrice>\r\n              </div>\r\n\r\n              {product.sizes && (\r\n                <div style={{ display: \"flex\" }}>\r\n                  {displaySize(product?.sizes)}\r\n                </div>\r\n              )}\r\n              <CardSubtitle>{product.description}</CardSubtitle>\r\n              <CardActions>\r\n                <Button\r\n                  disabled={isInCart(product.id)}\r\n                  handleClick={() => {\r\n                    addToCart(product);\r\n                    forceUpdate((it) => !it);\r\n                    enqueueSnackbar(\"Added to your cart\", {\r\n                      variant: \"success\",\r\n                    });\r\n                  }}\r\n                >\r\n                  Add to my cart\r\n                </Button>\r\n                <Button\r\n                  disabled={isInWishList(product.id)}\r\n                  color={SECONDARY_COLOR}\r\n                  handleClick={() => {\r\n                    addToWishlist(product);\r\n                    forceUpdate((it) => !it);\r\n                    enqueueSnackbar(\"Added to your wishlist\", {\r\n                      variant: \"success\",\r\n                    });\r\n                  }}\r\n                >\r\n                  Add to my wishlist\r\n                </Button>\r\n              </CardActions>\r\n            </CardContent>\r\n          </MainCard>\r\n\r\n          <h3 style={{ marginLeft: \"30px\", textAlign: \"left\" }}>\r\n            Similar products\r\n          </h3>\r\n          <Grid>\r\n            {relatedProducts.map((product) => (\r\n              <Card product={product} key={product.id}></Card>\r\n            ))}\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <Loader></Loader>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ProductDetails;\r\n","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\containers\\Pagination\\Pagination.js",["140","141","142"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { PRIMARY_COLOR, DEFAULT_COLOR } from \"../../common\";\r\nconst CustomButton = styled.button`\r\n  outline: none;\r\n  padding: 8px 10px;\r\n  font-weight: 600;\r\n  border: none;\r\n  color: ${PRIMARY_COLOR};\r\n  &:hover {\r\n    background-color: ${DEFAULT_COLOR};\r\n    color: #000;\r\n    box-shadow: -1px -1px 3px #ffffff, 1.5px 1.5px 3px rgba(174, 174, 192, 0.4);\r\n  }\r\n  ${(props) => props.disabled && `color: black; pointer-events: none;`}\r\n  ${(props) =>\r\n    props.active &&\r\n    `  \r\n    background-color: ${PRIMARY_COLOR};\r\n    pointer-events: none;\r\n    color: #fff;`}\r\n`;\r\nconst Container = styled.div`\r\n  border-radius: 5px;\r\n  display: inline;\r\n`;\r\n\r\nfunction Pagination({ datasetSize, onChange, itemsPerPage, currentPage }) {\r\n  const displayPages = (pages) => {\r\n    let arr = [];\r\n    if (currentPage > 1)\r\n      arr.push(<CustomButton onClick={() => onChange(1)}>1</CustomButton>);\r\n\r\n    if (currentPage >= 3) arr.push(<CustomButton disabled>...</CustomButton>);\r\n\r\n    for (let i = currentPage; i <= Math.min(pages, currentPage + 4); i++)\r\n      arr.push(\r\n        <CustomButton onClick={() => onChange(i)} active={currentPage == i}>\r\n          {i}\r\n        </CustomButton>\r\n      );\r\n\r\n    if (currentPage + 4 < pages) {\r\n      arr.push(<CustomButton disabled>...</CustomButton>);\r\n      arr.push(\r\n        <CustomButton onClick={() => onChange(pages)}>{pages}</CustomButton>\r\n      );\r\n    }\r\n    return arr;\r\n  };\r\n  const numberOfPages = Math.ceil(datasetSize / itemsPerPage);\r\n  return (\r\n    <Container>\r\n      {numberOfPages ? (\r\n        <>\r\n          <CustomButton\r\n            disabled={currentPage == 1}\r\n            onClick={() => onChange(currentPage - 1)}\r\n          >\r\n            Prev\r\n          </CustomButton>\r\n          {displayPages(numberOfPages)}\r\n          <CustomButton\r\n            disabled={currentPage >= numberOfPages}\r\n            onClick={() => onChange(currentPage + 1)}\r\n          >\r\n            Next\r\n          </CustomButton>\r\n        </>\r\n      ) : null}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\Category\\Category.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\Loader\\Loader.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\utils\\hashHelper.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\reportWebVitals.js",[],["143","144"],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\utils\\checkStorageHelper.js",["145","146","147","148"],"export const isInWishList = (id) => {\r\n  let products = JSON.parse(localStorage.getItem(\"favorite\") || \"[]\");\r\n  return products.findIndex((product) => product.id == id) >= 0;\r\n};\r\n\r\nexport const isInCart = (id) => {\r\n  let products = JSON.parse(localStorage.getItem(\"cart\") || \"[]\");\r\n  return products.findIndex((product) => product.id == id) >= 0;\r\n};\r\n\r\nexport const addToWishlist = (target) => {\r\n  let products = JSON.parse(localStorage.getItem(\"favorite\") || \"[]\");\r\n  if (products.findIndex((product) => product.id == target.id) >= 0) {\r\n    products = products.filter((product) => product.id != target.id);\r\n  } else products.push(target);\r\n  localStorage.setItem(\"favorite\", JSON.stringify(products));\r\n};\r\n\r\nexport const addToCart = (target) => {\r\n  let products = JSON.parse(localStorage.getItem(\"cart\") || \"[]\");\r\n  if (!isInCart(target.id)) products.push(target);\r\n  localStorage.setItem(\"cart\", JSON.stringify(products));\r\n};\r\n","C:\\Voquocthang\\PROJECT\\easy-buy\\src\\service\\firebase.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\service\\authentication.js",["149"],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\components\\CustomTooltip\\CustomTooltip.js",["150"],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\utils\\IdGenerator.js",[],"C:\\Voquocthang\\PROJECT\\easy-buy\\src\\pages\\ErrorPage\\ErrorPage.js",[],{"ruleId":"151","severity":1,"message":"152","line":121,"column":57,"nodeType":"153","endLine":121,"endColumn":72},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":218,"column":13,"nodeType":"160","endLine":225,"endColumn":14},{"ruleId":"154","replacedBy":"161"},{"ruleId":"156","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":21,"column":3,"nodeType":"165","messageId":"166","endLine":21,"endColumn":13},{"ruleId":"163","severity":1,"message":"167","line":137,"column":28,"nodeType":"165","messageId":"166","endLine":137,"endColumn":41},{"ruleId":"158","severity":1,"message":"159","line":238,"column":11,"nodeType":"160","endLine":245,"endColumn":12},{"ruleId":"168","severity":1,"message":"169","line":124,"column":6,"nodeType":"170","endLine":124,"endColumn":8,"suggestions":"171"},{"ruleId":"154","replacedBy":"172"},{"ruleId":"156","replacedBy":"173"},{"ruleId":"163","severity":1,"message":"174","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":131,"column":58,"nodeType":"177","messageId":"178","endLine":131,"endColumn":60},{"ruleId":"175","severity":1,"message":"179","line":133,"column":52,"nodeType":"177","messageId":"178","endLine":133,"endColumn":54},{"ruleId":"163","severity":1,"message":"180","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"175","severity":1,"message":"176","line":38,"column":71,"nodeType":"177","messageId":"178","endLine":38,"endColumn":73},{"ruleId":"175","severity":1,"message":"176","line":57,"column":35,"nodeType":"177","messageId":"178","endLine":57,"endColumn":37},{"ruleId":"154","replacedBy":"181"},{"ruleId":"156","replacedBy":"182"},{"ruleId":"175","severity":1,"message":"176","line":3,"column":53,"nodeType":"177","messageId":"178","endLine":3,"endColumn":55},{"ruleId":"175","severity":1,"message":"176","line":8,"column":53,"nodeType":"177","messageId":"178","endLine":8,"endColumn":55},{"ruleId":"175","severity":1,"message":"176","line":13,"column":50,"nodeType":"177","messageId":"178","endLine":13,"endColumn":52},{"ruleId":"175","severity":1,"message":"179","line":14,"column":56,"nodeType":"177","messageId":"178","endLine":14,"endColumn":58},{"ruleId":"163","severity":1,"message":"183","line":1,"column":10,"nodeType":"165","messageId":"166","endLine":1,"endColumn":14},{"ruleId":"163","severity":1,"message":"184","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-native-reassign",["185"],"no-negated-in-lhs",["186"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["185"],["186"],"no-unused-vars","'ButtonBase' is defined but never used.","Identifier","unusedVar","'closeSnackbar' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'enqueueSnackbar' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["187"],["185"],["186"],"'CartIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useState' is defined but never used.",["185"],["186"],"'auth' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},"Update the dependencies array to be: [enqueueSnackbar, history]",{"range":"190","text":"191"},[3243,3245],"[enqueueSnackbar, history]"]